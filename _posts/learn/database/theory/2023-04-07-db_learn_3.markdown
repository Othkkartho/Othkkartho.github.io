---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: DB
title: 데이터베이스 학습(3)-관계형 모델에 관해

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
author: Othkkartho's Workshop
# multiple category is not supported
category: 데이터베이스
# multiple tag entries are possible
tags: [데이터베이스]
# thumbnail image for post
img: ":/db/db-logo.avif"
# disable comments on this page
#comments_disable: true

# publish date
date: 2023-04-08 22:00:00 +0900

# seo
# if not specified, date will be used.
# meta_modify_date: 2023-03-17 13:15:00 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# if you enabled image_viewer_posts you don't need to enable this. This is only if image_viewer_posts = false
#image_viewer_on: true
# if you enabled image_lazy_loader_posts you don't need to enable this. This is only if image_lazy_loader_posts = false
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
# published: false
---

<!-- outline-start -->

학교에서 공부하는 데이터베이스 내용을 정리하는 포스트입니다.  
이번 포스트에서는 관계형 모델(Relational model)에 관해 포스트하겠습니다.

<!-- outline-end -->

* * *

### 개요
학교에서 배운 DB에 대한 내용을 정리하는 포스트입니다.  
이번에는 간단한 용어정리, 무결성에 관해 정리해 보겠습니다.

### 목차

1. [용어 정리](#용어-정리)
2. [관계](#관계의-속성)
3. [무결성](#무결성)

### 용어 정리
- 관계(Relation): 열과 행으로 이루어진 테이블입니다.
- 속성(Attribute): 테이블에서 이름이 명명된 열을 의미합니다.
- 도메인(Domain): 하나 또는 그 이상의 속성에 허용되는 값의 집합을 의미합니다.
- 튜플(Tuple): 테이블의 행에 해당합니다. instance나 occurrence라고도 불립니다.
- 차수(Degree): 테이블에 포함된 속성의 수 입니다.
- 카디널리티(Cardinaliy): 테이블에 포함된 튜플들의 수 입니다.
- 관계 데이터베이스(Relational database): 표준화된 테이블들의 집합입니다.
\n
아래는 데이터베이스를 공부하다 보면 많이 마주치는 속성과 튜플, 릴레이션이 무엇인지에 관한 사진입니다.
![table](:/db/theory/3/table.avif){:data-align="center"}

### 관계의 속성
- 테이블에는 해당 데이터베이스에 있는 다른 모든 테이블의 이름과 구별되는 이름이 붙어야 합니다.
- 테이블의 각 셀에는 원자값만이 들어갈 수 있습니다.
- 각 속성들은 같은 테이블 내에서는 고유한 이름을 가집니다.
- 속성의 값들은 모두 같은 도메인에 있습니다.
- 속성의 순서는 중요하지 않습니다.
- 각 튜플은 서로 다릅니다. 관계에 중복된 튜플은 있지 않습니다.
- 튜플의 순서는 이론적으로는 의미가 없습니다.

### 무결성
테이블이 유효한 상태를 유지하도록 하는 것이 제약 조건입니다.  
관계형 모델에는 아래 세 가지 주요 유형의 제약조건이 있습니다.  
키 제약조건, 개체 무결성, 참조 무결성   
이외에 암묵적 제약 조건에는 튜플의 모든 값은 해당 속성의 도메인에 있거나 해당 속성이 허용된 경우 null일 수 있다는 도메인 제약 조건이 있습니다.   
\n
**키 제약조건**   
- 릴레이션 R의 슈퍼키: 테이블에서 유일성만 만족하는 키들의 집합
    - 유일성: 테이블에서 튜플을 유일하게 식별할 수 있게 해주는 값을 의미합니다.
- 릴레이션 R의 키: 슈퍼키에서 최소성도 만족하는 키. 즉 유일성과 최소성을 만족시키는 것을 키라고 합니다.
    - 최소성: 릴레이션에서 튜플을 식별할 수 있게하는 최소한의 속성
    - 키는 모두 슈퍼키이지만, 슈퍼키가 모두 키인것은 아닙니다.
- 예: 차(지역, 일련번호, 차등록번호, 차 생산번호, 모델, 생산년도)
    - Key: {지역, 일련번호}, {차등록번호}
    - {차등록번호, 생산번호}는 슈퍼키이지만, 둘 모두 키로서 기능할 수 있기 때문에 최소성을 만족시키지 못해 키는 아닙니다.
\n
**개체 무결성**   
- 기본키는 튜플을 식별하는데 사용되기 때문에 각 테이블의 스키마에서 null값을 가질 수 없습니다.

**참조 무결성**
- 두 릴레이션 사이 관계에 대한 제약 조건입니다.
    - 한 테이블에서의 외래키는 해당 테이블과 관계를 가지고 있는 테이블의 기본키에 있는 값이거나 null 값이어야 합니다.

### 참고 자료
1. 학교 보조자료